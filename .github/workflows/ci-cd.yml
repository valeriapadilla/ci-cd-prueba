name: CI/CD

on:
  pull_request:
    branches: 
      - main
  release:
    types:
      - published

permissions:
  contents: read
  id-token: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        working-directory: prueba
        run: dotnet restore prueba.csproj

      - name: Build project
        working-directory: prueba
        run: dotnet build --no-restore --configuration Release

      - name: Build Tests
        working-directory: prueba.Tests
        run: dotnet build --configuration Release

      - name: Run Tests
        working-directory: prueba.Tests
        run: dotnet test --no-build --configuration Release
  publish:
    needs: build-test
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin ${{ secrets.REPOSITORY }}

      - name: Publish .NET App
        working-directory: prueba
        run: dotnet publish -c Release -o publish

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.REPOSITORY }}
          tags: |
            type=semver,pattern=v{{version}}
            latest
      
      - name: Build and push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      
  deploy:
    needs: publish
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: deployments/ecs-task.json
          service: weatherservice
          cluster: TTE-Cluster
          wait-for-service-stability: true
